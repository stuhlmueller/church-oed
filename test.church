#!r6rs

(import (church)
        (church church-eval trace-eval)
        (oed-utils)
        (rnrs))
        
(register-primitive-procedure! 'apply-church-procedure apply-church-procedure)
(register-primitive-procedure! 'normalized-euclidean-distance normalized-euclidean-distance)
(register-primitive-procedure! 'euclidean-distance euclidean-distance)
(register-primitive-procedure! 'loglogistic loglogistic)

(church

  (debug-mode 'mh-statistics true)
  (debug-mode 'verbosity 8)
  
  ; (load "./experiments/rr.models")
  ; (load "./experiments/rr.experiment")
  ; (load "./experiments/multinomial.experiment")
  (load "./experiments/exemplar-prototype.experiment")
  (load "./oed-utils.church")
  (define distance normalized-euclidean-distance)

  (define model-samples 500)
  (define model-lag 5)
  (define model-swaps 5)
  
  (define m1-s1-1 (empirical-dist (model1 stimulus-1 model-samples) response-space))
  (define m1-s1-2 (empirical-dist (model1 stimulus-1 model-samples) response-space))
  (pretty-print m1-s1-1)
  (pretty-print m1-s1-2)
  
  (define m1-s2-1 (empirical-dist (model1 stimulus-2 model-samples) response-space))
  (define m1-s2-2 (empirical-dist (model1 stimulus-2 model-samples) response-space))
  (pretty-print m1-s2-1)
  (pretty-print m1-s2-2)
  
  (define m2-s1-1 (empirical-dist (model2 stimulus-1 model-samples) response-space))
  (define m2-s1-2 (empirical-dist (model2 stimulus-1 model-samples) response-space))
  (pretty-print m2-s1-1)
  (pretty-print m2-s1-2)
  
  (define m2-s2-1 (empirical-dist (model2 stimulus-2 model-samples) response-space))
  (define m2-s2-2 (empirical-dist (model2 stimulus-2 model-samples) response-space))
  (pretty-print m2-s2-1)
  (pretty-print m2-s2-2)
  
  (define m1-self-1 (distance m1-s1-1 m1-s1-2))
  (define m1-self-2 (distance m1-s2-1 m1-s2-2))
  (define m2-self-1 (distance m2-s1-1 m2-s1-2))
  (define m2-self-2 (distance m2-s2-1 m2-s2-2))
  
  (define m1-m2-1 (distance m1-s1-1 m2-s1-1))
  (define m1-m2-2 (distance m1-s1-2 m2-s1-2))
  (define m1-m2-3 (distance m1-s2-1 m2-s2-1))
  (define m1-m2-4 (distance m1-s2-2 m2-s2-2))
  
  (display "Within-model distances (these should be low):\n")
  (pretty-print (list m1-self-1 m1-self-2))
  (pretty-print (list m2-self-1 m2-self-2))
  
  (display "\nAcross-model distances (these should be high):\n")
  (pretty-print (list m1-m2-1 m1-m2-2))
  (pretty-print (list m1-m2-3 m1-m2-4))
  
)